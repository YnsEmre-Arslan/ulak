package com.ars.message.webApi.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.ars.message.business.abstracts.MailConfigService;
import com.ars.message.business.concretes.MailReaderManager;
import com.ars.message.business.request.AnalyzeRequest;
import com.ars.message.business.response.ContactResponse;
import com.ars.message.entities.MailServerConfig;

import lombok.RequiredArgsConstructor;

@RestController
@RequestMapping("/mail")
@RequiredArgsConstructor
public class MailController {

    
    private final MailConfigService mailServerConfigService;

    @Autowired
    private MailReaderManager mailReader;

    @PostMapping("/analyze")
    public ResponseEntity<?> analyzeMails(@RequestBody AnalyzeRequest analyzeRequest) {
        try {
            // Kullanıcıya ait mail sunucu bilgilerini al
            MailServerConfig config = mailServerConfigService.getMailServerConfigForUser(analyzeRequest.username());
                        
            if (config == null) {
                return ResponseEntity.status(HttpStatus.NOT_FOUND).body("Mail server configuration not found for user: " + analyzeRequest.username());
            }

            // Mail okuma işlemini başlat
            List<ContactResponse> userMessages =  mailReader.readAndGroupMails(config);
            
            return ResponseEntity.ok(userMessages);
        } catch (Exception e) {
            return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).body("Error analyzing mails: " + e.getMessage());
        }
    }
}
